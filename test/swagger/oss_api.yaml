swagger: '2.0'
info:
  title: OSS管理系统API
  description: OSS管理系统后端API接口文档
  version: "1.0.0"
  contact:
    email: admin@example.com
host: localhost:8080
basePath: /api/v1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: 在请求头中添加 "Bearer {token}" 进行身份验证

tags:
  - name: auth
    description: 认证相关接口
  - name: user
    description: 用户相关接口
  - name: role
    description: 角色相关接口
  - name: permission
    description: 权限相关接口
  - name: oss-files
    description: OSS文件管理接口
  - name: oss-configs
    description: OSS配置管理接口
  - name: oss-multipart
    description: 分片上传相关接口
  - name: audit
    description: 审计日志接口

paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: 用户注册
      operationId: registerUser
      parameters:
        - in: body
          name: userInfo
          description: 注册用户信息
          required: true
          schema:
            type: object
            required:
              - username
              - passwd
              - email
              - real_name
            properties:
              username:
                type: string
                example: testuser
              passwd:
                type: string
                example: passwd123!
              email:
                type: string
                example: test@example.com
              real_name:
                type: string
                example: 测试用户
      responses:
        200:
          description: 注册成功
          schema:
            $ref: '#/definitions/Response'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: 用户名或邮箱已存在
          schema:
            $ref: '#/definitions/ErrorResponse'

  /auth/login:
    post:
      tags:
        - auth
      summary: 用户登录
      operationId: loginUser
      parameters:
        - in: body
          name: loginInfo
          description: 用户登录信息
          required: true
          schema:
            type: object
            required:
              - username
              - passwd
            properties:
              username:
                type: string
                example: testuser
              passwd:
                type: string
                example: passwd123!
      responses:
        200:
          description: 登录成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 登录成功
              data:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  user:
                    $ref: '#/definitions/User'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /user/current:
    get:
      tags:
        - user
      summary: 获取当前用户信息
      operationId: getCurrentUser
      security:
        - Bearer: []
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                $ref: '#/definitions/User'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/files:
    post:
      tags:
        - oss-files
      summary: 上传文件
      operationId: uploadFile
      security:
        - Bearer: []
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: 要上传的文件
        - in: formData
          name: storage_type
          type: string
          required: false
          description: 存储类型，不传则使用默认存储服务
          enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
      responses:
        200:
          description: 上传成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 上传成功
              data:
                $ref: '#/definitions/OSSFile'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    get:
      tags:
        - oss-files
      summary: 获取文件列表
      operationId: listFiles
      security:
        - Bearer: []
      parameters:
        - in: query
          name: page
          type: integer
          description: 页码，从1开始
          default: 1
        - in: query
          name: page_size
          type: integer
          description: 每页记录数
          default: 10
        - in: query
          name: keyword
          type: string
          description: 按文件名筛选
        - in: query
          name: storage_type
          type: string
          description: 按存储类型筛选
          enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  total:
                    type: integer
                    description: 总记录数
                    example: 25
                  page:
                    type: integer
                    description: 当前页码
                    example: 1
                  page_size:
                    type: integer
                    description: 每页记录数
                    example: 10
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/OSSFile'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/files/{id}:
    delete:
      tags:
        - oss-files
      summary: 删除文件
      operationId: deleteFile
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 文件ID
      responses:
        200:
          description: 删除成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 文件不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/files/{id}/download:
    get:
      tags:
        - oss-files
      summary: 获取文件下载链接
      operationId: getFileDownloadURL
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 文件ID
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  download_url:
                    type: string
                    description: 下载链接
                    example: https://example.com/download/abc123
                  expires_in:
                    type: integer
                    description: 链接有效期(秒)
                    example: 3600
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 文件不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/files/{id}/md5:
    post:
      tags:
        - oss-files
      summary: 触发MD5计算
      operationId: triggerMD5Calculation
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 文件ID
      responses:
        200:
          description: 触发成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 文件不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    get:
      tags:
        - oss-files
      summary: 获取文件MD5值
      operationId: getFileMD5
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 文件ID
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  md5:
                    type: string
                    description: MD5值
                    example: d41d8cd98f00b204e9800998ecf8427e
                  status:
                    type: string
                    description: 计算状态
                    enum: [pending, processing, completed, failed]
                    example: completed
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 文件不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/files/by-filename:
    get:
      tags:
        - oss-files
      summary: 根据原始文件名获取文件信息
      operationId: getFileByOriginalFilename
      security:
        - Bearer: []
      parameters:
        - in: query
          name: filename
          type: string
          required: true
          description: 原始文件名
          example: example.txt
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                $ref: '#/definitions/OSSFile'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 文件不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/configs:
    post:
      tags:
        - oss-configs
      summary: 创建存储配置
      operationId: createStorageConfig
      security:
        - Bearer: []
      parameters:
        - in: body
          name: configInfo
          description: 存储配置信息
          required: true
          schema:
            $ref: '#/definitions/StorageConfigInput'
      responses:
        200:
          description: 创建成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 创建成功
              data:
                $ref: '#/definitions/StorageConfig'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    get:
      tags:
        - oss-configs
      summary: 获取存储配置列表
      operationId: listStorageConfigs
      security:
        - Bearer: []
      parameters:
        - in: query
          name: page
          type: integer
          description: 页码，从1开始
          default: 1
        - in: query
          name: page_size
          type: integer
          description: 每页记录数
          default: 10
        - in: query
          name: name
          type: string
          description: 按配置名称筛选
        - in: query
          name: storage_type
          type: string
          description: 按存储类型筛选
          enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  total:
                    type: integer
                    description: 总记录数
                    example: 5
                  page:
                    type: integer
                    description: 当前页码
                    example: 1
                  page_size:
                    type: integer
                    description: 每页记录数
                    example: 10
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/StorageConfig'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/configs/{id}:
    get:
      tags:
        - oss-configs
      summary: 获取存储配置详情
      operationId: getStorageConfig
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 配置ID
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                $ref: '#/definitions/StorageConfig'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 配置不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    put:
      tags:
        - oss-configs
      summary: 更新存储配置
      operationId: updateStorageConfig
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 配置ID
        - in: body
          name: configInfo
          description: 存储配置信息
          required: true
          schema:
            $ref: '#/definitions/StorageConfigInput'
      responses:
        200:
          description: 更新成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 更新成功
              data:
                $ref: '#/definitions/StorageConfig'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 配置不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    delete:
      tags:
        - oss-configs
      summary: 删除存储配置
      operationId: deleteStorageConfig
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 配置ID
      responses:
        200:
          description: 删除成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 配置不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/configs/{id}/default:
    put:
      tags:
        - oss-configs
      summary: 设置默认配置
      operationId: setDefaultConfig
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 配置ID
      responses:
        200:
          description: 设置成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 配置不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/configs/{id}/test:
    post:
      tags:
        - oss-configs
      summary: 测试存储配置连接
      operationId: testStorageConnection
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 配置ID
      responses:
        200:
          description: 测试成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 配置不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 测试失败
          schema:
            $ref: '#/definitions/ErrorResponse'

  /audit/logs:
    get:
      tags:
        - audit
      summary: 获取审计日志列表
      operationId: listAuditLogs
      security:
        - Bearer: []
      parameters:
        - in: query
          name: page
          type: integer
          description: 页码，从1开始
          default: 1
        - in: query
          name: page_size
          type: integer
          description: 每页记录数
          default: 10
        - in: query
          name: start_time
          type: string
          format: date-time
          description: 开始时间
        - in: query
          name: end_time
          type: string
          format: date-time
          description: 结束时间
        - in: query
          name: user_id
          type: integer
          description: 用户ID
        - in: query
          name: username
          type: string
          description: 用户名
        - in: query
          name: action
          type: string
          description: 操作类型
          enum: [LOGIN, LOGOUT, UPLOAD, DOWNLOAD, DELETE, CREATE, UPDATE]
        - in: query
          name: resource_type
          type: string
          description: 资源类型
          enum: [FILE, USER, ROLE, CONFIG]
        - in: query
          name: status
          type: string
          description: 状态
          enum: [SUCCESS, FAILED]
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  total:
                    type: integer
                    description: 总记录数
                    example: 50
                  page:
                    type: integer
                    description: 当前页码
                    example: 1
                  page_size:
                    type: integer
                    description: 每页记录数
                    example: 10
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/AuditLog'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: 无权限操作
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/multipart/init:
    post:
      tags:
        - oss-multipart
      summary: 初始化分片上传
      operationId: initMultipartUpload
      security:
        - Bearer: []
      parameters:
        - in: query
          name: filename
          type: string
          required: true
          description: 文件名
          example: large_file.zip
        - in: query
          name: storage_type
          type: string
          required: false
          description: 存储类型，不传则使用默认存储服务
          enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
      responses:
        200:
          description: 初始化成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 初始化成功
              data:
                type: object
                properties:
                  upload_id:
                    type: string
                    description: 上传ID
                    example: abc123def456
                  urls:
                    type: array
                    description: 分片上传URL列表
                    items:
                      type: string
                      example: "https://example.com/upload/part1?token=abc"
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/multipart/complete:
    post:
      tags:
        - oss-multipart
      summary: 完成分片上传
      operationId: completeMultipartUpload
      security:
        - Bearer: []
      parameters:
        - in: body
          name: completeInfo
          description: 完成信息
          required: true
          schema:
            type: object
            required:
              - upload_id
              - filename
              - parts
            properties:
              upload_id:
                type: string
                description: 上传ID
                example: abc123def456
              filename:
                type: string
                description: 文件名
                example: large_file.zip
              parts:
                type: array
                description: 分片信息
                items:
                  type: object
                  properties:
                    PartNumber:
                      type: integer
                      description: 分片编号
                      example: 1
                    ETag:
                      type: string
                      description: ETag值
                      example: "\"etag1\""
      responses:
        200:
          description: 上传完成
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 上传完成
              data:
                $ref: '#/definitions/OSSFile'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /oss/multipart/abort:
    delete:
      tags:
        - oss-multipart
      summary: 取消分片上传
      operationId: abortMultipartUpload
      security:
        - Bearer: []
      parameters:
        - in: query
          name: upload_id
          type: string
          required: true
          description: 上传ID
          example: abc123def456
        - in: query
          name: filename
          type: string
          required: true
          description: 文件名
          example: large_file.zip
        - in: query
          name: storage_type
          type: string
          required: false
          description: 存储类型，不传则使用默认存储服务
          enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
      responses:
        200:
          description: 取消成功
          schema:
            $ref: '#/definitions/Response'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /users:
    get:
      tags:
        - user
      summary: 获取用户列表
      operationId: listUsers
      security:
        - Bearer: []
      parameters:
        - in: query
          name: page
          type: integer
          description: 页码，从1开始
          default: 1
        - in: query
          name: page_size
          type: integer
          description: 每页记录数
          default: 10
        - in: query
          name: username
          type: string
          description: 按用户名筛选
        - in: query
          name: email
          type: string
          description: 按邮箱筛选
        - in: query
          name: status
          type: boolean
          description: 按状态筛选
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  total:
                    type: integer
                    description: 总记录数
                    example: 25
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/User'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    post:
      tags:
        - user
      summary: 创建用户
      operationId: createUser
      security:
        - Bearer: []
      parameters:
        - in: body
          name: userInfo
          description: 用户信息
          required: true
          schema:
            type: object
            required:
              - username
              - passwd
              - email
            properties:
              username:
                type: string
                example: testuser
              passwd:
                type: string
                example: passwd123!
              email:
                type: string
                example: test@example.com
              real_name:
                type: string
                example: 测试用户
              role_ids:
                type: array
                items:
                  type: integer
                example: [1, 2]
      responses:
        200:
          description: 创建成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 创建成功
              data:
                $ref: '#/definitions/User'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /users/{id}:
    get:
      tags:
        - user
      summary: 获取用户详情
      operationId: getUser
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 用户ID
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                $ref: '#/definitions/User'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 用户不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    put:
      tags:
        - user
      summary: 更新用户
      operationId: updateUser
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 用户ID
        - in: body
          name: userInfo
          description: 用户信息
          required: true
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                example: test@example.com
              real_name:
                type: string
                example: 测试用户
              status:
                type: boolean
                example: true
              role_ids:
                type: array
                items:
                  type: integer
                example: [1, 2]
      responses:
        200:
          description: 更新成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 更新成功
              data:
                $ref: '#/definitions/User'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 用户不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    delete:
      tags:
        - user
      summary: 删除用户
      operationId: deleteUser
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 用户ID
      responses:
        200:
          description: 删除成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 用户不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /roles:
    get:
      tags:
        - role
      summary: 获取角色列表
      operationId: listRoles
      security:
        - Bearer: []
      parameters:
        - in: query
          name: page
          type: integer
          description: 页码，从1开始
          default: 1
        - in: query
          name: page_size
          type: integer
          description: 每页记录数
          default: 10
        - in: query
          name: name
          type: string
          description: 按角色名筛选
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  total:
                    type: integer
                    description: 总记录数
                    example: 10
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/Role'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    post:
      tags:
        - role
      summary: 创建角色
      operationId: createRole
      security:
        - Bearer: []
      parameters:
        - in: body
          name: roleInfo
          description: 角色信息
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                example: admin
              description:
                type: string
                example: 系统管理员
              permission_ids:
                type: array
                items:
                  type: integer
                example: [1, 2, 3]
      responses:
        200:
          description: 创建成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 创建成功
              data:
                $ref: '#/definitions/Role'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /roles/{id}:
    get:
      tags:
        - role
      summary: 获取角色详情
      operationId: getRole
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 角色ID
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                $ref: '#/definitions/Role'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 角色不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    put:
      tags:
        - role
      summary: 更新角色
      operationId: updateRole
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 角色ID
        - in: body
          name: roleInfo
          description: 角色信息
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                example: admin
              description:
                type: string
                example: 系统管理员
              permission_ids:
                type: array
                items:
                  type: integer
                example: [1, 2, 3]
      responses:
        200:
          description: 更新成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 更新成功
              data:
                $ref: '#/definitions/Role'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 角色不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    delete:
      tags:
        - role
      summary: 删除角色
      operationId: deleteRole
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 角色ID
      responses:
        200:
          description: 删除成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 角色不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /permissions:
    get:
      tags:
        - permission
      summary: 获取权限列表
      operationId: listPermissions
      security:
        - Bearer: []
      parameters:
        - in: query
          name: page
          type: integer
          description: 页码，从1开始
          default: 1
        - in: query
          name: page_size
          type: integer
          description: 每页记录数
          default: 10
        - in: query
          name: name
          type: string
          description: 按权限名筛选
        - in: query
          name: resource
          type: string
          description: 按资源类型筛选
        - in: query
          name: action
          type: string
          description: 按操作类型筛选
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                type: object
                properties:
                  total:
                    type: integer
                    description: 总记录数
                    example: 15
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/Permission'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    post:
      tags:
        - permission
      summary: 创建权限
      operationId: createPermission
      security:
        - Bearer: []
      parameters:
        - in: body
          name: permissionInfo
          description: 权限信息
          required: true
          schema:
            type: object
            required:
              - name
              - resource
              - action
            properties:
              name:
                type: string
                example: 创建用户
              description:
                type: string
                example: 允许创建新用户
              resource:
                type: string
                example: USER
              action:
                type: string
                example: CREATE
      responses:
        200:
          description: 创建成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 创建成功
              data:
                $ref: '#/definitions/Permission'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

  /permissions/{id}:
    get:
      tags:
        - permission
      summary: 获取权限详情
      operationId: getPermission
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 权限ID
      responses:
        200:
          description: 成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 成功
              data:
                $ref: '#/definitions/Permission'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 权限不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    put:
      tags:
        - permission
      summary: 更新权限
      operationId: updatePermission
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 权限ID
        - in: body
          name: permissionInfo
          description: 权限信息
          required: true
          schema:
            type: object
            required:
              - name
              - resource
              - action
            properties:
              name:
                type: string
                example: 创建用户
              description:
                type: string
                example: 允许创建新用户
              resource:
                type: string
                example: USER
              action:
                type: string
                example: CREATE
      responses:
        200:
          description: 更新成功
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 0
              message:
                type: string
                example: 更新成功
              data:
                $ref: '#/definitions/Permission'
        400:
          description: 请求参数错误
          schema:
            $ref: '#/definitions/ErrorResponse'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 权限不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'
    
    delete:
      tags:
        - permission
      summary: 删除权限
      operationId: deletePermission
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: 权限ID
      responses:
        200:
          description: 删除成功
          schema:
            $ref: '#/definitions/Response'
        401:
          description: 未授权
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: 权限不存在
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: 服务器错误
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:
  Response:
    type: object
    properties:
      code:
        type: integer
        example: 0
      message:
        type: string
        example: 操作成功
      data:
        type: object
        description: 空对象或其他信息

  ErrorResponse:
    type: object
    properties:
      code:
        type: integer
        example: 1001
      message:
        type: string
        example: 参数错误
      data:
        type: object
        description: 错误详情

  User:
    type: object
    properties:
      id:
        type: integer
        example: 1
      username:
        type: string
        example: testuser
      email:
        type: string
        example: test@example.com
      real_name:
        type: string
        example: 测试用户
      role:
        type: string
        enum: [admin, user]
        example: user
      created_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"

  OSSFile:
    type: object
    properties:
      id:
        type: integer
        example: 1
      file_name:
        type: string
        example: example.txt
      file_size:
        type: integer
        example: 1024
      file_type:
        type: string
        example: text/plain
      storage_type:
        type: string
        enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
        example: AWS_S3
      object_key:
        type: string
        example: uploads/example.txt
      config_id:
        type: integer
        example: 1
      config_name:
        type: string
        example: AWS S3存储
      md5:
        type: string
        example: d41d8cd98f00b204e9800998ecf8427e
      download_url:
        type: string
        example: https://example.com/download/abc123
      created_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"

  StorageConfig:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: AWS S3存储
      storage_type:
        type: string
        enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
        example: AWS_S3
      access_key:
        type: string
        example: AKIAIOSFODNN7EXAMPLE
      sec_key:
        type: string
        example: "********"
      region:
        type: string
        example: us-east-1
      bucket:
        type: string
        example: my-bucket
      endpoint:
        type: string
        example: https://s3.amazonaws.com
      root_path:
        type: string
        example: /data/storage
      is_default:
        type: boolean
        example: false
      description:
        type: string
        example: AWS S3存储配置
      created_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"

  StorageConfigInput:
    type: object
    required:
      - name
      - storage_type
    properties:
      name:
        type: string
        example: AWS S3存储
      storage_type:
        type: string
        enum: [ALIYUN_OSS, AWS_S3, CLOUDFLARE_R2]
        example: AWS_S3
      access_key:
        type: string
        example: AKIAIOSFODNN7EXAMPLE
      sec_key:
        type: string
        example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      region:
        type: string
        example: us-east-1
      bucket:
        type: string
        example: my-bucket
      endpoint:
        type: string
        example: https://s3.amazonaws.com
      root_path:
        type: string
        example: /data/storage
      description:
        type: string
        example: AWS S3存储配置

  AuditLog:
    type: object
    properties:
      id:
        type: integer
        example: 1
      user_id:
        type: integer
        example: 1
      username:
        type: string
        example: testuser
      action:
        type: string
        enum: [LOGIN, LOGOUT, UPLOAD, DOWNLOAD, DELETE, CREATE, UPDATE]
        example: LOGIN
      resource_type:
        type: string
        enum: [FILE, USER, ROLE, CONFIG]
        example: FILE
      resource_id:
        type: string
        example: "123"
      details:
        type: object
        description: 操作详情，JSON格式
        example: {"path": "/api/v1/oss/files", "query": "", "method": "POST", "status": 200}
      ip_address:
        type: string
        example: "192.168.1.1"
      user_agent:
        type: string
        example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
      status:
        type: string
        enum: [SUCCESS, FAILED]
        example: SUCCESS
      created_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"

  Role:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: admin
      description:
        type: string
        example: 系统管理员
      permissions:
        type: array
        items:
          $ref: '#/definitions/Permission'
      created_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"

  Permission:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: 创建用户
      description:
        type: string
        example: 允许创建新用户
      resource:
        type: string
        example: USER
      action:
        type: string
        example: CREATE
      created_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: "2023-01-01T12:00:00Z" 