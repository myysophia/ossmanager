name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  DOCKERHUB_USERNAME: ninesun0318
  IMAGE_NAME: ninesun0318/ossmanager-fronted

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整的 git 历史，以便正确获取标签

      - name: Get Docker tag
        id: get_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # 如果是 tag 触发，使用 tag 名称作为版本号（移除 refs/tags/ 前缀）
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            # 如果是 main 分支，使用 latest
            VERSION=latest
          else
            # 其他情况使用分支名或 PR 号
            VERSION=${GITHUB_REF#refs/heads/}
            VERSION=${VERSION#refs/pull/}
            VERSION=${VERSION%/merge}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Docker tag: $VERSION"

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max